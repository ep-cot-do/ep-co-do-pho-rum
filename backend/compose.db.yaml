services:
  fcoder-postgres:
    container_name: fcoder_postgres
    image: 'postgres:latest'
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    restart: always
    networks:
      fcoder-networks:

  fcoder-pgadmin4:
    container_name: fcoder_pgadmin4
    image: elestio/pgadmin:latest
    restart: always
    environment:
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 5050
    networks:
      fcoder-networks:
    ports:
      - "5050:5050"

  fcoder-redis:
    container_name: fcoder_redis
    image: 'redis:latest'
    restart: always
    ports:
      - "6379:6379"
    networks:
      fcoder-networks:

  fcoder-compiler:
    container_name: fcoder_compiler
    build:
      context: .
      dockerfile: Dockerfile.compiler
    restart: always
    volumes:
      - compiler_workspace:/workspace/code-execution
      - /tmp/fcoder-submissions:/tmp/fcoder-submissions
    networks:
      fcoder-networks:
    environment:
      - TZ=Asia/Ho_Chi_Minh
    security_opt:
      - no-new-privileges:true
    mem_limit: 2g
    cpus: 1.0
    user: coderunner
    stdin_open: true
    tty: true
    command: ["tail", "-f", "/dev/null"]

networks:
  fcoder-networks:
    name: fcoder_networks

volumes:
  compiler_workspace:
    name: fcoder_compiler_workspace