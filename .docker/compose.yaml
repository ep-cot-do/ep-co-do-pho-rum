services:
  fcoder-cloudflare-tunnel:
    container_name: fcoder-cloudflare-tunnel
    image: cloudflare/cloudflared
    restart: unless-stopped
    command: tunnel run
    profiles:
      - prod
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - fcoder-traefik-internal

  fcoder-traefik:
    container_name: fcoder-traefik
    image: traefik:v2.10
    restart: always
    command:
      - "--log"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--log.level=DEBUG" # Change to DEBUG for more info
      - "--accesslog=true"
      - "--serversTransport.insecureSkipVerify=true"
    ports:
      - "80:80"
      - "443:443"
    profiles:
      - prod
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - CF_DNS_API_TOKEN=${CF_API_TOKEN}
    networks:
      - fcoder-networks
      - fcoder-traefik-internal

  fcoder-cloudflare-companion:
    container_name: fcoder-cloudflare-companion
    image: ghcr.io/tiredofit/docker-traefik-cloudflare-companion:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TIMEZONE=Asia/Ho_Chi_Minh
      - LOG_TYPE=CONSOLE
      - LOG_LEVEL=INFO
      - TRAEFIK_VERSION=2
      - RC_TYPE=CNAME
      - TARGET_DOMAIN=${ROOT_DOMAIN}
      - REFRESH_ENTRIES=TRUE
      - ENABLE_TRAEFIK_POLL=TRUE
      - TRAEFIK_POLL_URL=http://fcoder-traefik/api
      - TRAEFIK_FILTER_LABEL=traefik.constraint
      - TRAEFIK_FILTER=proxy-public
      - CF_TOKEN=${CF_API_TOKEN}
      - DOMAIN1=${ROOT_DOMAIN}
      - DOMAIN1_ZONE_ID=${ZONE_ID}
      - DOMAIN1_PROXIED=TRUE
    restart: always
    networks:
      - fcoder-traefik-internal
    profiles:
      - prod

  fcoder-forum-frontend:
    container_name: fcoder-forum-frontend
    image: "${REGISTRY}/fcoder-forum-frontend:latest"
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=fcoder-networks"
      - "traefik.constraint=proxy-public"
      - "traefik.http.routers.fcoder-forum-frontend.rule=Host(`${ROOT_DOMAIN}`)"
      - "traefik.http.routers.fcoder-forum-frontend.entrypoints=web"
      - "traefik.http.services.fcoder-forum-frontend.loadbalancer.server.port=3000"
    networks:
      - fcoder-networks
    profiles:
      - prod

  # Backend PostgreSQL Database
  fcoder-forum-postgres:
    container_name: fcoder-forum-postgres
    image: "postgres:16"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always
    networks:
      - fcoder-networks
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    profiles:
      - prod

  # Redis for caching
  fcoder-forum-redis:
    container_name: fcoder-forum-redis
    image: "redis:latest"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redispassword}
    restart: always
    volumes:
      - redis-data:/data
    networks:
      - fcoder-networks
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - prod

  # Spring Boot Application
  fcoder-forum-backend:
    container_name: fcoder-forum-backend
    image: "${REGISTRY}/fcoder-forum-backend:latest"
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - fcoder-forum-postgres
      - fcoder-forum-redis
    environment:
      DB_HOST: fcoder-forum-postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: fcoder-forum-redis
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redispassword}
      SPRING_PROFILE: prod
      ACCESS_TOKEN_KEY: ${ACCESS_TOKEN_KEY}
      REFRESH_TOKEN_KEY: ${REFRESH_TOKEN_KEY}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      SWAGGER_URL: "https://api.${ROOT_DOMAIN}/api/v1/swagger-ui/index.html"
      PAYMENT_CALLBACK: "https://${ROOT_DOMAIN}/checkout"
      FORGOT_PASSWORD_CALLBACK: "https://${ROOT_DOMAIN}/forgot-password"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=fcoder-networks"
      - "traefik.constraint=proxy-public"
      # Updated router rule with fixed name and path prefix
      - "traefik.http.routers.fcoder-forum-backend.rule=Host(`api.${ROOT_DOMAIN}`)"
      - "traefik.http.routers.fcoder-forum-backend.entrypoints=web"
      - "traefik.http.services.fcoder-forum-backend.loadbalancer.server.port=8080"
    networks:
      - fcoder-networks
    healthcheck:
      test:
        ["CMD", "curl", "-f", "http://localhost:8080/api/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    profiles:
      - prod

networks:
  fcoder-networks:
    name: fcoder_networks
    driver: bridge
  fcoder-traefik-internal:
    name: fcoder_traefik_internal
    driver: bridge

volumes:
  postgres-data:
    name: fcoder_postgres_data
  redis-data:
    name: fcoder_redis_data
